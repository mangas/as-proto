// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.24.4

import { Writer, Reader } from "as-proto/assembly";
import { CryptoHash } from "../CryptoHash";

export class ActionReceiptGasReward {
  static encode(message: ActionReceiptGasReward, writer: Writer): void {
    const txHash = message.txHash;
    if (txHash !== null) {
      writer.uint32(10);
      writer.fork();
      CryptoHash.encode(txHash, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): ActionReceiptGasReward {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new ActionReceiptGasReward();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.txHash = CryptoHash.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  txHash: CryptoHash | null;

  constructor(txHash: CryptoHash | null = null) {
    this.txHash = txHash;
  }
}
