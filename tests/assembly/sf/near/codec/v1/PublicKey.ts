// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.24.4

import { Writer, Reader } from "as-proto/assembly";
import { CurveKind } from "./CurveKind";

export class PublicKey {
  static encode(message: PublicKey, writer: Writer): void {
    writer.uint32(8);
    writer.int32(message.type);

    writer.uint32(18);
    writer.bytes(message.bytes);
  }

  static decode(reader: Reader, length: i32): PublicKey {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new PublicKey();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.type = reader.int32();
          break;

        case 2:
          message.bytes = reader.bytes();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  type: CurveKind;
  bytes: Uint8Array;

  constructor(type: CurveKind = 0, bytes: Uint8Array = new Uint8Array(0)) {
    this.type = type;
    this.bytes = bytes;
  }
}
