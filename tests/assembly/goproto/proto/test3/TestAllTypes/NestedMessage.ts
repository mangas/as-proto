// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v4.25.0

import { Writer, Reader } from "as-proto/assembly";
import { TestAllTypes } from "../TestAllTypes";

export class NestedMessage {
  static encode(message: NestedMessage, writer: Writer): void {
    writer.uint32(8);
    writer.int32(message.a);

    const corecursive = message.corecursive;
    if (corecursive !== null) {
      writer.uint32(18);
      writer.fork();
      TestAllTypes.encode(corecursive, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): NestedMessage {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new NestedMessage();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.a = reader.int32();
          break;

        case 2:
          message.corecursive = TestAllTypes.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  a: i32;
  corecursive: TestAllTypes | null;

  constructor(a: i32 = 0, corecursive: TestAllTypes | null = null) {
    this.a = a;
    this.corecursive = corecursive;
  }
}
